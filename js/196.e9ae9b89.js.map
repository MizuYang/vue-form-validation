{"version":3,"file":"js/196.e9ae9b89.js","mappings":"6OAIA,MAAMA,EAAW,CACfC,GAAI,CACFC,QAAS,mBACTC,MAAO,eAETC,GAAI,CACFF,QAAS,0BACTC,MAAO,uBAETE,GAAI,CACFH,QAAS,yDACTC,MAAO,2CAKJ,SAASD,EAASI,GAEvB,MAAMC,EAAWC,EAAAA,EAAAA,MAAAA,YAAAA,gBACXC,EAAMT,EAASO,GAAUL,QAC/BQ,QAAQC,IAAIJ,EAAUE,GACtB,MAAMG,EAAc,iBACpB,QAAOA,EAAYC,KAAKP,IAAgBG,EAGnC,SAASN,EAAOG,GAErB,MAAMC,EAAWC,EAAAA,EAAAA,MAAAA,YAAAA,gBACXC,EAAMT,EAASO,GAAUJ,MAC/BO,QAAQC,IAAIJ,EAAUE,GACtB,MAAMK,EAAS,IACf,QAAOA,EAAOD,KAAKP,IAAgBG,E,0QCsBrC,MAAMD,GAAQO,EAAAA,EAAAA,OACR,OAAEC,GAAWR,EACbS,GAAQC,EAAAA,EAAAA,IAAI,MACZC,GAASD,EAAAA,EAAAA,IAAI,IACbE,GAAUF,EAAAA,EAAAA,IAAI,CAClBb,GAAI,CACFgB,OAAQ,KACRC,OAAQ,MAEVrB,GAAI,CACFoB,OAAQ,KACRC,OAAQ,MAEVlB,GAAI,CACFiB,OAAQ,KACRC,OAAQ,QAQZ,SAASC,EAAYC,EAAMC,IACzBC,EAAAA,EAAAA,GAAUF,GACVR,EAAO,uBAAwBQ,GAC/BC,I,OANFE,EAAAA,EAAAA,IAAW,UAAWzB,IACtByB,EAAAA,EAAAA,IAAW,QAASxB,G,0pCC3EpB,MAAMyB,EAAc,EAEpB","sources":["webpack://vue-template/./src/plugins/rules/myRules.js","webpack://vue-template/./src/components/veeValidate/items/myRules.vue","webpack://vue-template/./src/components/veeValidate/items/myRules.vue?917b"],"sourcesContent":["// 匯入 store 的進入點\r\nimport store from '@/vuex/index.js'\r\n\r\n// 建立自訂規則的各語系驗證失敗的版本\r\nconst feedback = {\r\n  zh: {\r\n    isPhone: '請輸入 09 開頭的正確電話號碼',\r\n    isCat: '請輸入喵咪語言~!喵~'\r\n  },\r\n  ja: {\r\n    isPhone: '09から始まる正しい電話番号を入力してください',\r\n    isCat: 'ニャー語を入力してください~!ニャー~'\r\n  },\r\n  en: {\r\n    isPhone: 'Please enter the correct phone number starting with 09',\r\n    isCat: 'Please enter the meow language~! Meow~'\r\n  }\r\n}\r\n\r\n// 電話驗證\r\nexport function isPhone (value) {\r\n  // 取得當前語系\r\n  const language = store.state.veeValidate.currentLanguage\r\n  const msg = feedback[language].isPhone\r\n  console.log(language, msg)\r\n  const phoneNumber = /^(09)[0-9]{8}$/\r\n  return phoneNumber.test(value) ? true : msg\r\n}\r\n// 貓咪驗證\r\nexport function isCat (value) {\r\n  // 取得當前語系\r\n  const language = store.state.veeValidate.currentLanguage\r\n  const msg = feedback[language].isCat\r\n  console.log(language, msg)\r\n  const string = /喵/\r\n  return string.test(value) ? true : msg\r\n}\r\n","<template>\r\n  <VForm class=\"mx-3\" v-slot=\"{errors, validate}\">\r\n    <!-- 手機號碼 -->\r\n    <label for=\"isPhone\" class=\"form-label text-18 mt-3 mb-0\">\r\n      請輸入手機號碼\r\n    </label>\r\n    <VField class=\"form-control\" type=\"tel\" name=\"isPhone\"\r\n            :class=\"[{\r\n              'is-invalid': errors['isPhone'],\r\n              'is-valid': phone&&!errors['isPhone']\r\n            }]\"\r\n            id=\"isPhone\"\r\n            v-model=\"phone\"\r\n            placeholder=\"請輸入 09 開頭的手機號碼(10碼)\"\r\n            maxLength=\"10\"\r\n            rules=\"isPhone\"\r\n            onkeyup=\"value=value.replace(/[^\\d]/g,'')\" />\r\n    <ErrorMessage name=\"isPhone\" class=\"invalid-feedback\" />\r\n\r\n    <!-- 貓咪說話 -->\r\n    <label for=\"isCat\" class=\"form-label text-18 mt-3 mb-0\">\r\n      請輸入貓咪語言\r\n    </label>\r\n    <VField class=\"form-control\" type=\"text\" name=\"isCat\"\r\n            :class=\"[{\r\n              'is-invalid': errors['isCat'],\r\n              'is-valid': catSay&&!errors['isCat']\r\n            }]\"\r\n            id=\"isCat\"\r\n            v-model=\"catSay\"\r\n            placeholder=\"學貓咪講話吧!喵 (文字中要有'喵')\"\r\n            rules=\"isCat\" />\r\n    <ErrorMessage name=\"isCat\" class=\"invalid-feedback\" />\r\n\r\n    <!-- 切換語系 -->\r\n    <ul class=\"d-flex align-items-center mt-2\">\r\n      <li v-for=\"{cnName,enName} in langBtn\" :key=\"enName\">\r\n        <button type=\"button\" class=\"btn btn-secondary me-2 px-2\"\r\n                @click=\"changeLang(enName, validate)\">\r\n          {{ cnName }}\r\n        </button>\r\n      </li>\r\n    </ul>\r\n  </VForm>\r\n\r\n</template>\r\n\r\n<script setup>\r\nimport { ref } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport { setLocale } from '@vee-validate/i18n'\r\nimport { defineRule } from 'vee-validate'\r\nimport {\r\n  isPhone,\r\n  isCat\r\n} from '@/plugins/rules/myRules.js'\r\n\r\nconst store = useStore()\r\nconst { commit } = store\r\nconst phone = ref(null)\r\nconst catSay = ref('')\r\nconst langBtn = ref({\r\n  en: {\r\n    enName: 'en',\r\n    cnName: '英文'\r\n  },\r\n  zh: {\r\n    enName: 'zh',\r\n    cnName: '中文'\r\n  },\r\n  ja: {\r\n    enName: 'ja',\r\n    cnName: '日文'\r\n  }\r\n})\r\n\r\n// 定義規則\r\ndefineRule('isPhone', isPhone)\r\ndefineRule('isCat', isCat)\r\n\r\nfunction changeLang (lang, validate) {\r\n  setLocale(lang)\r\n  commit('veeValidate/SET_LANG', lang)\r\n  validate()\r\n}\r\n</script>\r\n\r\n<style lang='scss' scope>\r\n\r\n</style>\r\n","import script from \"./myRules.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./myRules.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__"],"names":["feedback","zh","isPhone","isCat","ja","en","value","language","store","msg","console","log","phoneNumber","test","string","useStore","commit","phone","ref","catSay","langBtn","enName","cnName","changeLang","lang","validate","setLocale","defineRule","__exports__"],"sourceRoot":""}
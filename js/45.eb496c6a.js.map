{"version":3,"file":"js/45.eb496c6a.js","mappings":"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","sources":["webpack://vue-template/taiwanIdValidator/webpack/universalModuleDefinition","webpack://vue-template/taiwanIdValidator/src/index.ts","webpack://vue-template/taiwanIdValidator/src|sync","webpack://vue-template/taiwanIdValidator/webpack/bootstrap","webpack://vue-template/taiwanIdValidator/webpack/runtime/hasOwnProperty shorthand","webpack://vue-template/taiwanIdValidator/webpack/startup","webpack://vue-template/./src/views/TaiwanIdValidator.vue","webpack://vue-template/./src/views/TaiwanIdValidator.vue?a11c","webpack://vue-template/./src/components/taiwanIdValidator/ lazy ^\\.\\/.*\\.vue$ namespace object"],"sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"taiwanIdValidator\"] = factory();\n\telse\n\t\troot[\"taiwanIdValidator\"] = factory();\n})(this, function() {\nreturn ","function zipWith<T, R>(a1: T[], a2: T[], f: (v1: T, v2: T) => R): R[] {\n  const length = Math.min(a1.length, a2.length)\n  const result: R[] = []\n\n  for (let i = 0; i < length; i++) result[i] = f(a1[i], a2[i])\n\n  return result\n}\n\nfunction add(a: number, b: number) {\n  return a + b\n}\n\nfunction multiply(a: number, b: number) {\n  return a * b\n}\n\n/**\n * Verify the input is a valid GUI Number (中華民國統一編號)\n *\n * @param { string | number } input GUI Number\n * @param { boolean } extended check input using extended format: https://www.fia.gov.tw/singlehtml/6?cntId=aaa97a9dcf2649d5bdd317f554e24f75\n * @returns { boolean } is `input` a valid GUI number\n */\nexport function isGuiNumberValid(\n  input: string | number,\n  extended = false\n): boolean {\n  if (typeof input !== 'string' && typeof input !== 'number') return false\n\n  /**\n   * Example: 12345675\n   * Step 1:\n   * 1 * 1 = 1\n   * 2 * 2 = 4\n   * 3 * 1 = 3\n   * 4 * 2 = 8\n   * 5 * 1 = 5\n   * 6 * 2 = 12\n   * 7 * 4 = 28\n   * 5 * 1 = 5\n   *\n   * Step 2:\n   * 1 -> 1\n   * 4 -> 4\n   * 3 -> 3\n   * 8 -> 8\n   * 5 -> 5\n   * 12 -> 1 + 2 = 3\n   * 28 -> 2 + 8 = 10\n   * 5 -> 5\n   *\n   * Step 3:\n   * (1 + 4 + 3 + 8 + 5 + 3 + 10 + 5) % 10 = 9\n   */\n\n  const GUI_NUMBER_COEFFICIENTS = [1, 2, 1, 2, 1, 2, 4, 1]\n\n  const n = input.toString()\n  const regex = /^\\d{8}$/\n\n  if (!regex.test(n)) return false\n\n  /**\n   * Step 1: 先把統一編號的每個數字分別乘上對應的係數 (1, 2, 1, 2, 1, 2, 4, 1)\n   * Step 2: 再把個別乘積的十位數與個位數相加，得出八個小於 10 的數字\n   */\n\n  const intRadix = 10\n  const checksum = zipWith(\n    GUI_NUMBER_COEFFICIENTS,\n    n.split('').map(c => parseInt(c, intRadix)),\n    multiply\n  )\n    .map(n => (n % 10) + Math.floor(n / 10))\n    .reduce(add, 0)\n\n  /**\n   * Step 3: 檢查把這 8 個數字相加之後計算此和除以 5 or 10 的餘數\n   * Step 4:\n   *  4-1: 若是餘數為 0，則為正確的統一編號\n   *  4-2: 若是餘數為 9，且原統一編號的第七位是 7，則也為正確的統一編號\n   */\n\n  const divisor = extended ? 5 : 10\n\n  return (\n    checksum % divisor === 0 ||\n    (parseInt(n.charAt(6), intRadix) === 7 && (checksum + 1) % divisor === 0)\n  )\n}\n\n/**\n * Verify the input is a valid National identification number (中華民國身分證字號)\n *\n * @param { string } input National identification number\n * @returns { boolean } is `input` a valid national ID number\n */\nexport function isNationalIdentificationNumberValid(input: string): boolean {\n  if (typeof input !== 'string') return false\n\n  const regex = /^[A-Z][1,2]\\d{8}$/\n\n  return regex.test(input) && verifyTaiwanIdIntermediateString(input)\n}\n\n/**\n * Verify the input is a valid resident certificate number (臺灣地區無戶籍國民、外國人、大陸地區人民及香港或澳門居民之專屬代號)\n *\n * @param { string } input resident certificate number\n * @returns { boolean } is `input` a valid resident certificate number\n */\nexport function isResidentCertificateNumberValid(input: string): boolean {\n  if (typeof input !== 'string') return false\n\n  return (\n    isNewResidentCertificateNumberValid(input) ||\n    isOriginalResidentCertificateNumberValid(input)\n  )\n}\n\n/**\n * Verify the input is a valid new resident certificate number (臺灣地區無戶籍國民、外國人、大陸地區人民及香港或澳門居民之專屬代號)\n *\n * @param { string } input resident certificate number\n * @returns { boolean } is `input` a valid new resident certificate number\n */\nexport function isNewResidentCertificateNumberValid(input: string): boolean {\n  if (typeof input !== 'string') return false\n\n  const regex = /^[A-Z][8,9]\\d{8}$/\n\n  return regex.test(input) && verifyTaiwanIdIntermediateString(input)\n}\n\n/**\n * Verify the input is a original valid resident certificate number (臺灣地區無戶籍國民、外國人、大陸地區人民及香港或澳門居民之專屬代號)\n *\n * @param { string } input resident certificate number\n * @returns { boolean } is `input` a valid original resident certificate number\n */\nexport function isOriginalResidentCertificateNumberValid(\n  input: string\n): boolean {\n  if (typeof input !== 'string') return false\n\n  const regex = /^[A-Z]{2}\\d{8}$/\n\n  return regex.test(input) && verifyTaiwanIdIntermediateString(input)\n}\n\n/**\n * Verify the input is a valid citizen digital certificate number (自然人憑證)\n *\n * @param { string } input citizen digital certificate number\n * @returns { boolean } is `input` a valid citizen digital certificate number\n */\nexport function isCitizenDigitalCertificateNumberValid(input: string): boolean {\n  if (typeof input !== 'string') return false\n\n  const n = input.toString()\n\n  // 驗證規則為兩碼英文 + 14 碼數字\n  const regex = /^[A-Z]{2}\\d{14}$/\n\n  return regex.test(n)\n}\n\n/**\n * Verify the input is a valid E-Invoice cell phone barcode (電子發票手機條碼)\n *\n * @param { string } input E-Invoice cell phone barcode\n * @returns { boolean } is `input` a valid e-invoice cell phone barcode\n */\nexport function isEInvoiceCellPhoneBarcodeValid(input: string): boolean {\n  if (typeof input !== 'string') return false\n\n  const n = input.toString()\n\n  /**\n   * 總長度為 8 碼\n   * 第 1 碼為 /\n   * 第 2-8 碼由 0-9 (數字), A-Z (大寫英文字母), .(period), -(hyphen), +(plus) 組成\n   */\n  const regex = /^\\/[\\dA-Z.\\-+]{7}$/\n\n  return regex.test(n)\n}\n\n/**\n * Verify the input is a valid E-Invoice donate code (電子發票捐贈碼)\n *\n * @param { string | number } input E-Invoice donate code\n * @returns { boolean } is `input` a valid e-invoice donate code\n */\nexport function isEInvoiceDonateCodeValid(input: string | number): boolean {\n  if (typeof input !== 'string' && typeof input !== 'number') return false\n\n  const n = input.toString()\n\n  // 總長度為 3-7 碼 0-9 的數字\n  const regex = /^[\\d]{3,7}$/\n\n  return regex.test(n)\n}\n\nexport type CreditCardValidationOptions = {\n  /**\n   * validate `input` with regex\n   * (Warning! Card issuers might introduce new card number patterns. Use this in production might cause unexpected results.)\n   */\n  checkIssuerRegexes?: boolean\n}\n\n/**\n * Verify the input is a valid credit card number (信用卡卡號)\n *\n * @param { string | number } input credit card number\n * @param { CreditCardValidationOptions } creditCardValidationOptions credit card validation options\n * @returns { boolean } is `input` a valid credit card number\n */\nexport function isCreditCardNumberValid(input: string, options: CreditCardValidationOptions = {}): boolean {\n  if (typeof input !== 'string') return false\n\n  const regex = /^[0-9]{12,19}$/\n\n  if (!regex.test(input)) return false\n\n  // ref:\n  //   https://stackoverflow.com/questions/9315647/regex-credit-card-number-tests\n  //   https://en.wikipedia.org/wiki/Payment_card_number\n  const issuerRegexes = [\n    /^3[47][0-9]{13}$/, // American Express\n    /^(6541|6556)[0-9]{12}$/, // BCGlobal\n    /^389[0-9]{11}$/, // Carte Blanche\n    /^3(?:0[0-5]|[68][0-9])[0-9]{11}$/, // Diner's Club\n    /^65[4-9][0-9]{13}|64[4-9][0-9]{13}|6011[0-9]{12}|(622(?:12[6-9]|1[3-9][0-9]|[2-8][0-9][0-9]|9[01][0-9]|92[0-5])[0-9]{10})$/, // Discover\n    /^63[7-9][0-9]{13}$/, // Insta Payment\n    /^(?:2131|1800|35\\d{3})\\d{11}$/, // JCB\n    /^9[0-9]{15}$/, // KoreanLocalCard\n    /^(6304|6706|6709|6771)[0-9]{12,15}$/, // Laser\n    /^(5018|5020|5038|6304|6759|6761|6763)[0-9]{8,15}$/, // Maestro\n    /^(5[1-5][0-9]{14}|2(22[1-9][0-9]{12}|2[3-9][0-9]{13}|[3-6][0-9]{14}|7[0-1][0-9]{13}|720[0-9]{12}))$/, // Mastercard\n    /^(6334|6767)[0-9]{12}|(6334|6767)[0-9]{14}|(6334|6767)[0-9]{15}$/, // Solo\n    /^(4903|4905|4911|4936|6333|6759)[0-9]{12}|(4903|4905|4911|4936|6333|6759)[0-9]{14}|(4903|4905|4911|4936|6333|6759)[0-9]{15}|564182[0-9]{10}|564182[0-9]{12}|564182[0-9]{13}|633110[0-9]{10}|633110[0-9]{12}|633110[0-9]{13}$/, // Switch\n    /^(62[0-9]{14,17})$/, // Union Pay\n    /^4[0-9]{12}(?:[0-9]{3})?$/, // Visa\n    /^(?:4[0-9]{12}(?:[0-9]{3})?|5[1-5][0-9]{14})$/ // Visa Master\n  ]\n\n  const { checkIssuerRegexes = false } = options\n\n  if (checkIssuerRegexes && !issuerRegexes.some(regex => regex.test(input)))\n    return false\n\n  // Luhn algorithm\n  // ref: https://en.wikipedia.org/wiki/Luhn_algorithm\n  const digits = input.split('').map(d => parseInt(d, 10))\n  const sum = digits.reverse().reduce((acc, d, i) => {\n    if (i % 2 === 0) return acc + d\n    return acc + (d * 2 > 9 ? d * 2 - 9 : d * 2)\n  }, 0)\n\n  return sum % 10 === 0\n}\n\n/**\n * Verify the intermediate string for isNationalIdentificationNumberValid and isResidentCertificateNumberValid\n *\n * @param { string } input String to verify\n * @returns { boolean } is `input` a valid Taiwan ID intermediate string\n */\nfunction verifyTaiwanIdIntermediateString(input: string): boolean {\n  const intRadix = 10\n\n  /**\n   *  A=10 台北市     J=18 新竹縣     S=26 高雄縣\n   *  B=11 台中市     K=19 苗栗縣     T=27 屏東縣\n   *  C=12 基隆市     L=20 台中縣     U=28 花蓮縣\n   *  D=13 台南市     M=21 南投縣     V=29 台東縣\n   *  E=14 高雄市     N=22 彰化縣     W=32 金門縣*\n   *  F=15 台北縣     O=35 新竹市*    X=30 澎湖縣\n   *  G=16 宜蘭縣     P=23 雲林縣     Y=31 陽明山\n   *  H=17 桃園縣     Q=24 嘉義縣     Z=33 連江縣*\n   *  I=34 嘉義市*    R=25 台南縣\n   *\n   *  Step 1: 英文字母按照上表轉換為數字之後，十位數 * 1 + 個位數 * 9 相加\n   */\n  const TAIWAN_ID_LOCALE_CODE_LIST = [\n    1, // A -> 10 -> 1 * 1 + 9 * 0 = 1\n    10, // B -> 11 -> 1 * 1 + 9 * 1 = 10\n    19, // C -> 12 -> 1 * 1 + 9 * 2 = 19\n    28, // D\n    37, // E\n    46, // F\n    55, // G\n    64, // H\n    39, // I -> 34 -> 1 * 3 + 9 * 4 = 39\n    73, // J\n    82, // K\n    2, // L\n    11, // M\n    20, // N\n    48, // O -> 35 -> 1 * 3 + 9 * 5 = 48\n    29, // P\n    38, // Q\n    47, // R\n    56, // S\n    65, // T\n    74, // U\n    83, // V\n    21, // W -> 32 -> 1 * 3 + 9 * 2 = 21\n    3, // X\n    12, // Y\n    30 // Z -> 33 -> 1 * 3 + 9 * 3 = 30\n  ]\n\n  const RESIDENT_CERTIFICATE_NUMBER_LIST = [\n    0, // A\n    1, // B\n    2, // C\n    3, // D\n    4, // E\n    5, // F\n    6, // G\n    7, // H\n    4, // I\n    8, // J\n    9, // K\n    0, // L\n    1, // M\n    2, // N\n    5, // O\n    3, // P\n    4, // Q\n    5, // R\n    6, // S\n    7, // T\n    8, // U\n    9, // V\n    2, // W\n    0, // X\n    1, // Y\n    3 // Z\n  ]\n\n  const getCharOrder = (s: string, i: number) =>\n    s.charCodeAt(i) - 'A'.charCodeAt(0)\n\n  const firstDigit = TAIWAN_ID_LOCALE_CODE_LIST[getCharOrder(input, 0)]\n\n  const secondDigit = isNaN(parseInt(input[1], intRadix)) // if is not a number (舊版居留證編號)\n    ? RESIDENT_CERTIFICATE_NUMBER_LIST[getCharOrder(input, 1)]\n    : parseInt(input[1], intRadix)\n\n  const rest = input\n    .substring(2)\n    .split('')\n    .map(n => parseInt(n, intRadix))\n\n  const idInDigits = [firstDigit, secondDigit, ...rest]\n\n  // Step 2: 第 1 位數字 (只能為 1 or 2) 至第 8 位數字分別乘上 8, 7, 6, 5, 4, 3, 2, 1 後相加，再加上第 9 位數字\n\n  const ID_COEFFICIENTS = [1, 8, 7, 6, 5, 4, 3, 2, 1, 1]\n  const sum = zipWith(idInDigits, ID_COEFFICIENTS, multiply).reduce(add, 0)\n\n  // Step 3: 如果該數字為 10 的倍數，則為正確身分證字號\n\n  return sum % 10 === 0\n}\n\nexport const isGUI = isGuiNumberValid\nexport const isNI = isNationalIdentificationNumberValid\nexport const isRC = isResidentCertificateNumberValid\nexport const isNewRC = isNewResidentCertificateNumberValid\nexport const isOriginalRC = isOriginalResidentCertificateNumberValid\nexport const isCDC = isCitizenDigitalCertificateNumberValid\nexport const isCellPhoneBarcode = isEInvoiceCellPhoneBarcodeValid\nexport const isDonateCode = isEInvoiceDonateCodeValid\nexport const isCreditCard = isCreditCardNumberValid\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nwebpackEmptyContext.id = 875;\nmodule.exports = webpackEmptyContext;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(607);\n","<template>\r\n  <header>\r\n    <h2 class=\"text-20\">\r\n      Taiwan-id-validator\r\n      <a href=\"https://hugo.digitalgo.synology.me/2022/04/%E8%BA%AB%E5%88%86%E8%AD%89%E5%AD%97%E8%99%9F%E6%96%B0%E5%BC%8F%E5%B1%85%E7%95%99%E8%AD%89%E8%99%9F%E8%88%8A%E5%BC%8F%E5%B1%85%E7%95%99%E8%AD%89%E8%99%9F%E5%8F%8A%E7%B5%B1%E4%B8%80%E7%B7%A8%E8%99%9F%E7%94%A2%E7%94%9F%E5%99%A8%E6%9A%A8%E9%A9%97%E8%AD%89%E5%99%A8/\"\r\n        target=\"_blank\"\r\n        class=\"text-14 border-bottom border-primary ms-5 px-2\">\r\n        測試資料產生器\r\n      </a>\r\n    </h2>\r\n\r\n     <!-- 驗證時機配置 -->\r\n    <div class=\"d-flex align-items-center my-3\">\r\n      <h3 class=\"me-3\">驗證時機：</h3>\r\n      <label for=\"一輸入就驗證\" class=\"form-check-label\">\r\n        <input type=\"radio\" name=\"validateEventName\"\r\n              class=\"form-check-input\" id=\"一輸入就驗證\"\r\n              value=\"一輸入就驗證\"\r\n              v-model=\"validateEventName\">\r\n        一輸入就驗證\r\n      </label>\r\n      <div class=\"mx-3\">\r\n        <label for=\"離開焦點才驗證\" class=\"form-check-label\">\r\n          <input type=\"radio\" name=\"validateEventName\"\r\n                class=\"form-check-input\" id=\"離開焦點才驗證\"\r\n                value=\"離開焦點才驗證\"\r\n                v-model=\"validateEventName\">\r\n          離開焦點才驗證\r\n        </label>\r\n      </div>\r\n      <label for=\"手動驗證\" class=\"form-check-label\">\r\n        <input type=\"radio\" name=\"validateEventName\"\r\n              class=\"form-check-input\" id=\"手動驗證\"\r\n              value=\"手動驗證\"\r\n              v-model=\"validateEventName\">\r\n        手動驗證\r\n      </label>\r\n    </div>\r\n\r\n    <!-- 語系配置 -->\r\n    <div class=\"d-flex align-items-center my-3\">\r\n      <h3 class=\"me-3\">多國語系：</h3>\r\n      <label for=\"中文\" class=\"form-check-label\">\r\n        <input type=\"radio\" name=\"validateLanguage\"\r\n              class=\"form-check-input\" id=\"中文\"\r\n              value=\"zh\"\r\n              v-model=\"validateLanguage\"\r\n              @change=\"changeValidateLang\">\r\n        中文\r\n      </label>\r\n      <div class=\"mx-3\">\r\n        <label for=\"英文\" class=\"form-check-label\">\r\n          <input type=\"radio\" name=\"validateLanguage\"\r\n                class=\"form-check-input\" id=\"英文\"\r\n                value=\"en\"\r\n                v-model=\"validateLanguage\"\r\n                @change=\"changeValidateLang\">\r\n          英文\r\n        </label>\r\n      </div>\r\n      <label for=\"日文\" class=\"form-check-label\">\r\n        <input type=\"radio\" name=\"validateLanguage\"\r\n              class=\"form-check-input\" id=\"日文\"\r\n              value=\"ja\"\r\n              v-model=\"validateLanguage\"\r\n              @change=\"changeValidateLang\">\r\n        日文\r\n      </label>\r\n    </div>\r\n  </header>\r\n\r\n  <form class=\"mt-3 pb-4\">\r\n    <!-- 每個demo區塊 -->\r\n    <div class=\"area p-3\"\r\n         v-for=\"item in data\" :key=\"item.name\">\r\n      <component :is=\"item.component\"\r\n                 v-model=\"item.vModel\"\r\n                 :item=\"item\"\r\n                 :validateEvent=\"validateEvent\"\r\n                 @validateRules=\"validateRules\"></component>\r\n\r\n      <!-- 驗證失敗提示 -->\r\n      <template v-if=\"item.feedback\">\r\n        <p class=\"area text-danger p-3 pt-0\">\r\n          {{ item.feedback }}\r\n        </p>\r\n      </template>\r\n\r\n      <!-- 提供測試用資料 -->\r\n      <p class=\"area p-3 pt-0\">\r\n        試試：{{ item.testString.join('、 ') }}...等\r\n      </p>\r\n    </div>\r\n  </form>\r\n\r\n  <!-- 手動驗證 -->\r\n  <template v-if=\"validateEventName==='手動驗證'\">\r\n    <div class=\"position-fixed ms-5\"\r\n          style=\"right:20px;bottom:50px;\">\r\n      <button type=\"button\"\r\n              class=\"btn btn-primary rounded-pill\"\r\n              style=\"padding: 30px 10px!important;\"\r\n              @click=\"validate\">\r\n        手動驗證\r\n      </button>\r\n    </div>\r\n  </template>\r\n</template>\r\n\r\n<script setup>\r\nimport { ref, reactive, computed, defineAsyncComponent } from 'vue'\r\nimport { useStore } from 'vuex'\r\nimport {\r\n  isGuiNumberValid, // 統一編號\r\n  isNationalIdentificationNumberValid, // 身分證字號\r\n  isResidentCertificateNumberValid, // 居留證編號\r\n  isNewResidentCertificateNumberValid, // 新式居留證編號\r\n  isOriginalResidentCertificateNumberValid, // 舊式居留證編號\r\n  isCitizenDigitalCertificateNumberValid, // 自然人憑證\r\n  isEInvoiceCellPhoneBarcodeValid, // 手機條碼\r\n  isEInvoiceDonateCodeValid, // 捐贈碼\r\n  isCreditCardNumberValid // 信用卡\r\n} from 'taiwan-id-validator'\r\n\r\n// store\r\nconst store = useStore()\r\nconst { dispatch } = store\r\n\r\n// data\r\nconst validateEventName = ref('一輸入就驗證')\r\nconst validateLanguage = ref('zh')\r\nconst isValidate = ref(false) // 判斷開始驗證了\r\nconst data = reactive([\r\n  {\r\n    name: '統一編號',\r\n    fileName: '統一編號',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isGuiNumberValid,\r\n    // vModel: 統一編號,\r\n    placeHolder: '請輸入 統一編號',\r\n    testString: ['94609767', '09702853', '15859493']\r\n  },\r\n  {\r\n    name: '身分證字號',\r\n    fileName: '身分證字號',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isNationalIdentificationNumberValid,\r\n    // vModel: 身分證字號,\r\n    placeHolder: '請輸入 身分證字號',\r\n    testString: ['A125573934', 'A250985499', 'A250772885']\r\n  },\r\n  {\r\n    name: '居留證編號',\r\n    fileName: '居留證編號',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isResidentCertificateNumberValid,\r\n    // vModel: 居留證編號,\r\n    placeHolder: '請輸入 居留證編號',\r\n    testString: ['A984102515', 'A870725624', 'A816976896']\r\n  },\r\n  {\r\n    name: '新式居留證編號',\r\n    fileName: '新式居留證編號',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isNewResidentCertificateNumberValid,\r\n    // vModel: 新式居留證編號,\r\n    placeHolder: '請輸入 新式居留證編號',\r\n    testString: ['A984102515', 'A870725624', 'A816976896']\r\n  },\r\n  {\r\n    name: '舊式居留證編號',\r\n    fileName: '舊式居留證編號',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isOriginalResidentCertificateNumberValid,\r\n    // vModel: 舊式居留證編號,\r\n    placeHolder: '請輸入 舊式居留證編號',\r\n    testString: ['AA77455441', 'AC78562850', 'AA67427382']\r\n  },\r\n  {\r\n    name: '自然人憑證',\r\n    fileName: '自然人憑證',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isCitizenDigitalCertificateNumberValid,\r\n    // vModel: 自然人憑證,\r\n    placeHolder: '請輸入 自然人憑證',\r\n    testString: ['AA12345678901234']\r\n  },\r\n  {\r\n    name: '手機條碼',\r\n    fileName: '手機條碼',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isEInvoiceCellPhoneBarcodeValid,\r\n    // vModel: 手機條碼,\r\n    placeHolder: '請輸入 手機條碼',\r\n    testString: ['/DBS1234']\r\n  },\r\n  {\r\n    name: '捐贈碼',\r\n    fileName: '捐贈碼',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isEInvoiceDonateCodeValid,\r\n    // vModel: 捐贈碼,\r\n    placeHolder: '請輸入 捐贈碼',\r\n    testString: ['001']\r\n  },\r\n  {\r\n    name: '信用卡',\r\n    fileName: '信用卡',\r\n    isValid: 0, // 0:初始直初始值 1:成功 2:失敗\r\n    component: null,\r\n    rule: isCreditCardNumberValid,\r\n    // vModel: 信用卡,\r\n    placeHolder: '請輸入 信用卡',\r\n    testString: ['5105105105105100']\r\n  }\r\n])\r\nconst form = reactive({\r\n  統一編號: ref(''),\r\n  身分證字號: ref(''),\r\n  居留證編號: ref(''),\r\n  新式居留證編號: ref(''),\r\n  舊式居留證編號: ref(''),\r\n  自然人憑證: ref(''),\r\n  手機條碼: ref(''),\r\n  捐贈碼: ref(''),\r\n  信用卡: ref('')\r\n})\r\ngetComponent()\r\n\r\n// computed\r\nconst validateEvent = computed(() => {\r\n  let event = ''\r\n  if (validateEventName.value === '一輸入就驗證') event = 'input'\r\n  else if (validateEventName.value === '離開焦點才驗證') event = 'change'\r\n  else if (validateEventName.value === '手動驗證') event = 'input'\r\n\r\n  return event\r\n})\r\n\r\nfunction getComponent () {\r\n  data.forEach(item => {\r\n    item.component = defineAsyncComponent(() => import(`@/components/taiwanIdValidator/${item.fileName}.vue`))\r\n  })\r\n}\r\nfunction validateRules (e, ruleName) {\r\n  const value = e.target.value\r\n\r\n  // 更新表單欄位的值\r\n  form[ruleName] = value\r\n\r\n  if (validateEventName.value === '手動驗證') return\r\n\r\n  isValidate.value = true\r\n\r\n  const rule = data.filter(item => item.name === ruleName)[0].rule\r\n\r\n  // 更新 data 驗證的結果\r\n  data.forEach(async item => {\r\n    if (item.name === ruleName) {\r\n      const isValid = rule(value)\r\n\r\n      if (isValid) {\r\n        item.isValid = 1\r\n        item.feedback = ''\r\n      } else {\r\n        item.isValid = 2\r\n        item.feedback = await dispatch('taiwanIdValidator/getFeedback', [validateLanguage.value, ruleName])\r\n      }\r\n    }\r\n  })\r\n}\r\nfunction validate () {\r\n  isValidate.value = true\r\n\r\n  data.forEach(async item => {\r\n    const ruleName = item.name\r\n    const value = form[ruleName]\r\n    const rule = item.rule\r\n    const isValid = rule(value)\r\n\r\n    if (value) {\r\n      item.isValid = isValid ? 1 : 2\r\n    } else {\r\n      item.isValid = 2\r\n    }\r\n    if (isValid) {\r\n      item.feedback = ''\r\n    } else {\r\n      item.feedback = await dispatch('taiwanIdValidator/getFeedback', [validateLanguage.value, ruleName])\r\n    }\r\n  })\r\n}\r\n// 切換語系: 將驗證失敗的欄位 feedback 更換語系\r\nfunction changeValidateLang () {\r\n  data.forEach(async item => {\r\n    if (item.isValid === 2) {\r\n      item.feedback = await dispatch('taiwanIdValidator/getFeedback', [validateLanguage.value, item.name])\r\n    }\r\n  })\r\n}\r\n</script>\r\n\r\n<style lang='scss' scope>\r\n\r\n</style>\r\n","import script from \"./TaiwanIdValidator.vue?vue&type=script&setup=true&lang=js\"\nexport * from \"./TaiwanIdValidator.vue?vue&type=script&setup=true&lang=js\"\n\nconst __exports__ = script;\n\nexport default __exports__","var map = {\n\t\"./信用卡.vue\": [\n\t\t393,\n\t\t393\n\t],\n\t\"./居留證編號.vue\": [\n\t\t6376,\n\t\t376\n\t],\n\t\"./手機條碼.vue\": [\n\t\t9963,\n\t\t963\n\t],\n\t\"./捐贈碼.vue\": [\n\t\t4721,\n\t\t721\n\t],\n\t\"./新式居留證編號.vue\": [\n\t\t871,\n\t\t871\n\t],\n\t\"./統一編號.vue\": [\n\t\t3167,\n\t\t167\n\t],\n\t\"./自然人憑證.vue\": [\n\t\t354,\n\t\t354\n\t],\n\t\"./舊式居留證編號.vue\": [\n\t\t2876,\n\t\t876\n\t],\n\t\"./身分證字號.vue\": [\n\t\t6467,\n\t\t467\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function() { return Object.keys(map); };\nwebpackAsyncContext.id = 8991;\nmodule.exports = webpackAsyncContext;"],"names":["root","factory","module","zipWith","a1","a2","f","length","Math","min","result","i","add","a","b","multiply","isGuiNumberValid","input","extended","GUI_NUMBER_COEFFICIENTS","n","toString","regex","test","intRadix","checksum","split","map","c","parseInt","floor","reduce","divisor","charAt","isNationalIdentificationNumberValid","verifyTaiwanIdIntermediateString","isResidentCertificateNumberValid","isNewResidentCertificateNumberValid","isOriginalResidentCertificateNumberValid","isCitizenDigitalCertificateNumberValid","isEInvoiceCellPhoneBarcodeValid","isEInvoiceDonateCodeValid","isCreditCardNumberValid","options","issuerRegexes","checkIssuerRegexes","_a","some","digits","d","sum","reverse","acc","TAIWAN_ID_LOCALE_CODE_LIST","RESIDENT_CERTIFICATE_NUMBER_LIST","getCharOrder","s","charCodeAt","firstDigit","secondDigit","isNaN","rest","substring","idInDigits","ID_COEFFICIENTS","exports","webpackEmptyContext","req","e","keys","resolve","id","__webpack_module_cache__","moduleId","__webpack_modules__","__webpack_require__","o","Object","prototype","hasOwnProperty","call","obj","prop","__webpack_exports__","store","useStore","dispatch","validateEventName","ref","validateLanguage","isValidate","data","reactive","name","fileName","isValid","component","rule","placeHolder","testString","form","統一編號","身分證字號","居留證編號","新式居留證編號","舊式居留證編號","自然人憑證","手機條碼","捐贈碼","信用卡","getComponent","validateEvent","computed","event","value","forEach","item","defineAsyncComponent","validateRules","ruleName","target","filter","async","feedback","validate","changeValidateLang","__exports__","webpackAsyncContext","Promise","then","Error","code","ids"],"sourceRoot":""}